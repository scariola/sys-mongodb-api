<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config
		name="impl-mongodb-whitelist-flow-test-suite.xml" />
	<munit:test name="msisdn-mongodb-lookup-flow-success-test"
		doc:id="f4ccbfac-cb50-47e4-9ac5-4cd07c1c5ccf">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock flow ref to find-msisdn-whitelist-subflow"
				doc:id="d8f2b25e-6c46-4e54-9666-123c38ff6cb8" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="e8f15840-d402-4a5d-8c36-3ec76c5e0a38"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[output application/java --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_payload.dwl')]"
						mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable key="outboundHeaders"
							value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection"
							value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_1.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn"
							value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_2.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input"
				doc:id="744de4c4-1090-465f-a391-23022761d1bf">
				<munit:payload
					value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_payload.dwl')]"
					encoding="UTF-8" />
				<munit:attributes
					value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders"
						value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to msisdn-mongodb-lookup-flow"
				doc:id="21e3f7b9-a0f8-4e84-ac33-051121183c66"
				name="msisdn-mongodb-lookup-flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload"
				doc:id="06abc75d-16eb-4f58-bad3-2eb20953d6c8"
				message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import msisdnmongodblookupflowsuccesstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call
				doc:name="Verify END - Process MSISDN Whitelist Lookup"
				doc:id="9ab3c5a5-a082-45d2-8e47-62f998478a8c" processor="logger"
				times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="bf682ed4-f855-4b11-a7ab-a5418208c2c3"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test
		name="msisdn-mongodb-lookup-flow-no-msisdn-found-test"
		doc:id="0d6d27e2-9012-47bb-b007-41de964cee1d">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock flow ref to find-msisdn-whitelist-subflow"
				doc:id="4e7f4b9f-3719-4d07-a11b-b3ae4fbdb0bc" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="e8f15840-d402-4a5d-8c36-3ec76c5e0a38"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[output application/java --- readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\mock_payload.dwl')]"
						mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable key="outboundHeaders"
							value="#[readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection"
							value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\mock_variable_1.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn"
							value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\mock_variable_2.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input"
				doc:id="795ea31f-4f20-4f34-b809-1c93eb61293a">
				<munit:payload
					value="#[readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\set-event_payload.dwl')]"
					encoding="UTF-8" />
				<munit:attributes
					value="#[readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders"
						value="#[readUrl('classpath://msisdnmongodblookupflownomsisdnfoundtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to msisdn-mongodb-lookup-flow"
				doc:id="87589482-8b3b-4821-afca-71df3f08084f"
				name="msisdn-mongodb-lookup-flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload"
				doc:id="ca61cda8-463f-47f7-9541-d45f2292bb8d"
				message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import msisdnmongodblookupflownomsisdnfoundtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call
				doc:name="Verify END - Process MSISDN Whitelist Lookup"
				doc:id="1812e869-c707-4871-9974-e7276e949d82" processor="logger"
				times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="bf682ed4-f855-4b11-a7ab-a5418208c2c3"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="msisdn-mongodb-deletion-flow-success-test"
		doc:id="405cb311-354b-4ac8-b9b6-c08af680fcef">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock flow ref to remove-msisdn-whitelist"
				doc:id="86e2dff9-66e9-4346-b73c-57589d2736da" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="0b5a0a73-c9b2-4e86-8e9c-7a543d057442"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[output application/java --- readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\mock_payload.dwl')]"
						mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable key="outboundHeaders"
							value="#[readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection"
							value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\mock_variable_1.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn"
							value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\mock_variable_2.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input"
				doc:id="e05ebb23-4459-4f84-9300-721d90ed0b14">
				<munit:payload
					value="#[readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\set-event_payload.dwl')]"
					encoding="UTF-8" />
				<munit:attributes
					value="#[readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders"
						value="#[readUrl('classpath://msisdnmongodbdeletionflowsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref
				doc:name="Flow-ref to msisdn-mongodb-deletion-flow"
				doc:id="fcc61481-8703-4317-a8c0-83104f6c4d9a"
				name="msisdn-mongodb-deletion-flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload"
				doc:id="0075d1c9-582d-4dc6-8d76-57a2b595b53f"
				message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import msisdnmongodbdeletionflowsuccesstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call
				doc:name="Verify END - Process MSISDN Removable"
				doc:id="39a91a34-950e-4313-a076-a410fb22bf8d" processor="logger"
				times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="9d683b34-a19a-4965-86b1-23593244adb0"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test
		name="msisdn-mongodb-deletion-flow-no-msisdn-to-delete-test"
		doc:id="ec5ccf9f-9f26-443a-8fb2-f48461f03754">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock flow ref to remove-msisdn-whitelist"
				doc:id="37565ce3-47f4-4f2d-86f3-de1a9b9fe203" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="0b5a0a73-c9b2-4e86-8e9c-7a543d057442"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[output application/java --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_payload.dwl')]"
						mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables>
						<munit-tools:variable key="outboundHeaders"
							value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection"
							value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_1.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn"
							value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_2.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input"
				doc:id="a6a39bd3-add5-4416-a692-7777f90edf15">
				<munit:payload
					value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_payload.dwl')]"
					encoding="UTF-8" />
				<munit:attributes
					value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders"
						value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref
				doc:name="Flow-ref to msisdn-mongodb-deletion-flow"
				doc:id="1bb4f4e8-646d-4da8-809b-412b3bf62805"
				name="msisdn-mongodb-deletion-flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload"
				doc:id="1d69a192-fda4-49af-9c6a-80008f03777f"
				message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import msisdnmongodbdeletionflownomsisdntodeletetest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call
				doc:name="Verify END - Process MSISDN Removable"
				doc:id="611032e6-fcc9-40fe-b97f-83c940974d8d" processor="logger"
				times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="9d683b34-a19a-4965-86b1-23593244adb0"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="msisdn-mongodb-deletion-flow-sys-mongodb-api_Shared_Error_Handler-mongoDB-Connectivity-test" doc:id="7bed4316-e7fa-40d1-9a68-9a90d05faf5f">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock flow ref to remove-msisdn-whitelist" doc:id="3c9ff5c5-de17-4d1a-885c-1fddea4aa2f1" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="0b5a0a73-c9b2-4e86-8e9c-7a543d057442" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="MONGO:CONNECTIVITY" />
					<munit-tools:variables>
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection" value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn" value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="49458b75-7b41-42a0-ab77-103f386ca923">
				<munit:payload value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="2d10de5f-f47b-45cf-921f-2c8b7ef89bd3">
				<flow-ref doc:name="Flow-ref to msisdn-mongodb-deletion-flow" doc:id="76bff5e6-564a-489c-af27-dab3ec997272" name="msisdn-mongodb-deletion-flow" />
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="caa2940e-bdb9-4639-828f-ab0e08aa3171">
						<logger level="INFO" doc:name="Logger" doc:id="6fac9202-0469-43aa-9661-217b000e4432" message="delete mongo  Connectivty Error" />
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert error mongo connectivity" doc:id="bb6a4925-b6ee-4b41-b839-df95c78383b7" is="#[MunitTools::equalTo('MONGO:CONNECTIVITY')]" expression="#[payload.result.errorType]" />
			<munit-tools:verify-call doc:name="Verify Error Status 503" doc:id="dd0bd47a-d2b9-4040-96ab-31ce4f35fcb8" processor="set-variable" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="91efed4b-e1fb-408a-ace2-e4a7c5d94d37" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="91efed4b-e1fb-408a-ace2-e4a7c5d94d37" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="91efed4b-e1fb-408a-ace2-e4a7c5d94d37" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="91efed4b-e1fb-408a-ace2-e4a7c5d94d37" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="msisdn-mongodb-deletion-flow-sys-mongodb-api_Shared_Error_Handler-any-test" doc:id="8f51d812-cdb4-46e9-a50b-447d864a0aa3">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock flow ref to remove-msisdn-whitelist" doc:id="9279af3d-5ac2-4cd5-8993-2ef20826025c" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0b5a0a73-c9b2-4e86-8e9c-7a543d057442" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection" value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn" value="#[output application/json --- readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="17bc4116-be39-4d59-b64f-dd3f12847532" >
				<munit:payload value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodbdeletionflownomsisdntodeletetest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="ea956a53-0150-434a-84cc-f2d360261edc" >
				<flow-ref doc:name="Flow-ref to msisdn-mongodb-deletion-flow" doc:id="c974fe8d-0d16-4196-a9d4-48a8795e9917" name="msisdn-mongodb-deletion-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="319607c8-14fe-4e02-9903-f3def6cac3d8" >
						<logger level="INFO" doc:name="Logger" doc:id="997e6a63-0876-45fd-81cc-496f46aea6cf" message="delete mongodb any error" />
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert error any" doc:id="7b9f691f-99b9-4575-8ddc-aa2f93106524" expression="#[payload.result.errorType]" is="#[MunitTools::equalTo('MULE:ANY')]" />
			<munit-tools:verify-call doc:name="Verify Error Status 500" doc:id="c36af001-af51-4dcd-868f-6d9658df2ec9" processor="set-variable" times="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="500" attributeName="value" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="msisdn-mongodb-lookup-flow-api_Shared_Error_Handler-mongoDB-Connectivity-test" doc:id="6a60e0f8-d5c0-4544-bf78-2f42cb576431">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock flow ref to find-msisdn-whitelist-subflow" doc:id="bbfe6fea-7b7f-4eee-8307-b7d7a033f76b" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="e8f15840-d402-4a5d-8c36-3ec76c5e0a38" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="MONGO:CONNECTIVITY" />
					<munit-tools:variables>
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection" value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn" value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="49c168ff-bfb2-4df1-9e18-f89d1df610dd">
				<munit:payload value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="91daea36-fb00-4bbc-ab97-f195a73307f0" >
				<flow-ref doc:name="Flow-ref to msisdn-mongodb-lookup-flow" doc:id="71d8a76c-d0bf-4776-b8df-f64e0a0ce3d5" name="msisdn-mongodb-lookup-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="fdc3efff-b3cf-4316-a277-e852659e13a6" >
						<logger level="INFO" doc:name="Logger" doc:id="13f97fcf-26b1-4a19-b539-b6e379552789" message="lookup mongodb connectivity error"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert error mongo connectivity" doc:id="3da0a5b5-8515-448d-93c6-63072b02f198" expression="#[payload.result.errorType]" is="#[MunitTools::equalTo('MONGO:CONNECTIVITY')]" />
			<munit-tools:verify-call doc:name="Verify Error Status 503" doc:id="5ce9f336-6836-4e7f-a687-7cb71861be47" processor="set-variable" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="91efed4b-e1fb-408a-ace2-e4a7c5d94d37" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="msisdn-mongodb-lookup-flow-api_Shared_Error_Handler-mongoDB-Connectivity-test1" doc:id="bba6817c-9635-4e45-9f9a-7889b9ec7e9b">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock flow ref to find-msisdn-whitelist-subflow" doc:id="19abbd0e-8e7b-4659-87a8-1e370a41049c" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e8f15840-d402-4a5d-8c36-3ec76c5e0a38" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="MULE:ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="collection" value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="msisdn" value="#[output application/json --- readUrl('classpath://msisdnmongodblookupflowsuccesstest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="02925e8b-552b-4190-9683-27ad16e54c20" >
				<munit:payload value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://msisdnmongodblookupflowsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="bd6ee2f6-3331-455c-9d8e-4564c32c5039" >
				<flow-ref doc:name="Flow-ref to msisdn-mongodb-lookup-flow" doc:id="72ef5184-036c-4f65-bf73-9fa2a7c3e4af" name="msisdn-mongodb-lookup-flow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="fbb804d4-628b-4e1f-842c-93e641c1b0a1" >
						<logger level="INFO" doc:name="Logger" doc:id="41ed9820-ac4c-4954-9dde-800d65627a3f" message="lookup mongodb any error"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert error any" doc:id="2e1bd4c9-4e56-4680-b58d-dc819bc396cc" expression="#[payload.result.errorType]" is="#[MunitTools::equalTo('MULE:ANY')]" />
			<munit-tools:verify-call doc:name="Verify Error Status 500" doc:id="7dfbe3e8-cf06-4bdc-ab5f-625c91327782" processor="set-variable" times="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="500" attributeName="value" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
</mule>
